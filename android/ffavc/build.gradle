apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    ndkVersion rootProject.ndkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static"
            }
        }

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a","x86_64"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path './CMakeLists.txt'
        }
    }
    namespace 'org.ffavc'

    android.libraryVariants.all { variant ->
        variant.outputs.each { variantOutput ->
            def tag = "ffavc"
            println("${tag}.name=----------------${variant.name}")
            println("${tag}.description=----------------${variant.description}")

            variant.mergeAssets.doLast {
                println("libraryVariants doLast ${rootProject.path}")
                def fromFile = project.getBuildDir().path + "/intermediates/merged_native_libs/${variant.name}/out/lib"
                println("${tag} fromFile = " + fromFile)
                def intoFile = project.getBuildDir().path +"/outputs/${variant.name}/lib"
                println("${tag} targetFile = " + intoFile)
                def targetFile = new File(intoFile)
                if(!targetFile.exists()) {
                    targetFile.mkdirs()
                }
                copy {
                    from fromFile
                    into intoFile
                    println("${tag} copy success")
                }
            }

        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}
